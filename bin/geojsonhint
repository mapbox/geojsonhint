#!/usr/bin/env node

var fs = require('fs'),
    path = require('path'),
    geojsonhint = require('../'),
    VFile = require('vfile'),
    vfileReporter = require('vfile-reporter'),
    concat = require('concat-stream'),
    argv = require('minimist')(process.argv.slice(2));

if (process.stdin.isTTY && !argv._[0]) {
    process.stdout.write(fs.readFileSync(path.join(__dirname, '/HELP.md')));
    process.exit(1);
}

var filename;
if (argv._[0]) {
    filename = argv._[0];
}

(filename ? fs.createReadStream(filename) : process.stdin).pipe(concat(hint));

function hint(input) {

    var options = {
      noDuplicateMembers: argv.noDuplicateMembers !== 'false',
      ignoreRightHandRule: argv.ignoreRightHandRule === 'true'
    };

    var errors = geojsonhint.hint(input.toString(), options);

    if (!errors || !errors.length) {
        process.exit(0);
    }

    var format = argv.f || argv.format || 'pretty';

    if (format === 'json') {
        if (errors instanceof Error) {
            console.log(JSON.stringify(errors.toString(), null, 2));
        } else {
            console.log(JSON.stringify(errors, null, 2));
        }
    } else if (format === 'pretty') {
        var file = new VFile({
            contents: input,
            filename: filename
        });
        file.quiet = true;
        errors.forEach(function(e) {
          var pos = { line: e.line };
          var fn = (e.level === 'message')  ? 'message' : 'fail';
          try {
              file[fn](e.message, pos)
          } catch(e) { }
        });
        console.log(vfileReporter(file));
    } else if (format === 'compact') {
        var filePart = filename ? filename + ': ' : '';
        errors.forEach(function(e) {
          var level = e.level ? e.level : "error";
          console.log(filePart + 'line ' + e.line + ' - ' + e.message + " - " + level);
        });
    } else {
        throw new Error('Format unknown');
    }

    var shouldFail = errors.some(function(e) {
        return e.level !== 'message'
    });
    if (shouldFail) process.exitCode = 1
}
